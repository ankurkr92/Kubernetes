1. Prepare Your Machines
You need at least 2 Linux machines (VMs or physical), one as the control-plane (master), others as workers.
Each should have a unique hostname, static IP, and internet access.

2. Install Docker (or containerd)
On all nodes:
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl
sudo apt-get install -y docker.io
sudo systemctl enable docker
sudo systemctl start docker

3. Disable Swap
On all nodes:
sudo swapoff -a
sudo sed -i '/ swap / s/^/#/' /etc/fstab

4. Install kubeadm, kubelet, kubectl
On all nodes:
sudo curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

5. Initialize the Control Plane Node
On the master node:
sudo kubeadm init --pod-network-cidr=10.244.0.0/16

After completion, follow the instructions to set up your kubeconfig:
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

6. Install a Pod Network Add-on
On the master node (example: Flannel):
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

7. Join Worker Nodes
On each worker node, run the kubeadm join ... command output by kubeadm init on the master node.
sudo kubeadm join <master-ip>:6443 --token <token> --discovery-token-ca-cert-hash sha256:<hash>

kubeadm token create --print-join-command

Example:
8. Verify the Cluster
On the master node:

You can add these steps to your README.md for future reference. Let me know if you need a ready-to-copy markdown version!
